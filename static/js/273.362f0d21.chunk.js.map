{"version":3,"file":"static/js/273.362f0d21.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/Welcome/Welcome.styled.js","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid #555555;\n  border-radius: 16px;\n  padding: 12px;\n  margin-bottom: 24px;\n`\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 16px;\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  margin: 16px 0 20px;\n`;\n","import { AddButton, Form, Input, Label } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, number };\n    const matchedContact = contacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (matchedContact) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"input-name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id=\"input-name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n      />\n      <Label htmlFor=\"input-number\">Phone number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id=\"input-number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  height: 40px;\n  padding: 0 8px;\n  &:not(:last-of-type) {\n    border-bottom: 1px solid #555555;\n  }\n  &:nth-of-type(even) {\n    background-color: #dddddd;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  height: 24px;\n  margin-left: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactItem, DeleteButton } from './Contact.styled';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem>\n      <p>\n        {name}: {number}\n      </p>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n};\n","import { Input, Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <Label htmlFor=\"input-search\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        id=\"input-search\"\n        onChange={handleChange}\n        name=\"filter\"\n        value={filter}\n      />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 350px;\n  margin: 0 auto;\n  padding: 20px 0;\n`;\n\nexport const Title1 = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 12px;\n`;\n\nexport const Title2 = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 12px;\n`;\n\nexport const Wrapper = styled.div`\n  border: 1px solid #555555;\n  border-radius: 16px;\n  padding: 12px;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n`","import Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport {\n  Container,\n  Message,\n  Title1,\n  Title2,\n  Wrapper,\n} from '../Welcome/Welcome.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title1>Phonebook</Title1>\n      <ContactForm />\n      <Title2>Contacts</Title2>\n      <Wrapper>\n        {loading && <Loader />}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 ? (\n          <>\n            <Filter />\n            {visibleContacts.length > 0 ? (\n              <ContactList />\n            ) : (\n              <Message>\n                Sorry, we didn't find any contacts matching your query\n              </Message>\n            )}\n          </>\n        ) : (\n          <Message>You don't have any contacts</Message>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","Label","Input","AddButton","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","find","alert","addContact","htmlFor","type","id","pattern","title","required","onChange","ContactItem","DeleteButton","Contact","onClick","deleteContact","ContactList","map","Filter","setFilter","Container","Title1","Title2","Wrapper","Message","loading","visibleContacts","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}