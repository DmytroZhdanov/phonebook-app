{"version":3,"file":"static/js/867.9310adb7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/Contacts/Contacts.jsx","Pages/Contacts/Contacts.styled.js","components/Form.styled.js"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import { Button, Form, Input, Label } from 'components/Form.styled';\nimport { useState } from 'react';\nimport { useAddContactMutation } from 'redux/auth/api';\nimport PropTypes from 'prop-types';\n\nexport const ContactForm = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const newContact = { name, number };\n    const matchedContact = contacts?.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (matchedContact) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    addContact(newContact);\n    reset();\n  };\n\n  const handleBlur = e => {\n    e.currentTarget.parentElement.setAttribute(\n      'data-filled',\n      `${e.currentTarget.value === '' ? 'false' : 'true'}`\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"input-name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id=\"input-name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={name}\n        />\n      </Label>\n      <Label htmlFor=\"input-number\">\n        Phone number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id=\"input-number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  height: 40px;\n  padding: 0 8px;\n  &:not(:last-of-type) {\n    border-bottom: 1px solid #efefef;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  height: 24px;\n  margin-left: auto;\n  background-color: transparent;\n  padding: 0;\n  border: none;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem, DeleteButton, Text } from './Contact.styled';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { useDeleteContactMutation } from 'redux/auth/api';\n\nexport const Contact = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = async () => {\n    deleteContact(id);\n  };\n\n  return (\n    <ContactItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        <RiDeleteBin6Line size=\"20\" color=\"#C8C8C8\" />\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Contact } from 'components/Contact/Contact';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Form, Input, Label } from 'components/Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  const handleBlur = e => {\n    e.currentTarget.parentElement.setAttribute(\n      'data-filled',\n      `${e.currentTarget.value === '' ? 'false' : 'true'}`\n    );\n  };\n\n  return (\n    <Form>\n      <Label htmlFor=\"input-search\">\n        Find contacts by name\n        <Input\n          type=\"text\"\n          id=\"input-search\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          name=\"filter\"\n          value={filter}\n        />\n      </Label>\n    </Form>\n  );\n};\n","import Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLazyFetchContactsQuery } from 'redux/auth/api';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport {\n  Container,\n  Message,\n  Title1,\n  Title2,\n  Wrapper,\n} from '../Contacts/Contacts.styled';\n\nconst Contacts = () => {\n  const [fetchContacts, { data: contacts, isFetching, error }] = useLazyFetchContactsQuery();\n\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts])\n  \n\n  return (\n    <Container>\n      <Wrapper>\n        <Title1>New Contact</Title1>\n        <ContactForm contacts={contacts ?? []} />\n      </Wrapper>\n      <Wrapper>\n        <Title2>Contacts</Title2>\n        {isFetching && <Loader />}\n        {error && <p>{'error'}</p>}\n        {contacts?.length > 0 ? (\n          <>\n            <Filter />\n            {visibleContacts?.length > 0 ? (\n              <ContactList contacts={visibleContacts} />\n            ) : (\n              <Message>\n                Sorry, we didn't find any contacts matching your query\n              </Message>\n            )}\n          </>\n        ) : (\n          <Message>You don't have any contacts</Message>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 320px;\n  margin: 0 auto;\n  padding: 0 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 30px;\n  }\n`;\n\nexport const Title1 = styled.h1`\n  font-size: 28px;\n  line-height: 1.2;\n  font-weight: 700;\n  margin-bottom: 33px;\n  text-align: center;\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 28px;\n  line-height: 1.2;\n  font-weight: 700;\n  margin-bottom: 33px;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 30px;\n  background-color: #FFFFFF;\n  padding: 40px 20px 20px;\n  margin: 30px auto 0;\n\n  @media screen and (min-width: 768px){\n    width: 400px;\n  }\n`;\n\nexport const Message = styled.p`\n  color: #a4a4a4;\n  text-align: center;\n  font-size: 14px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 320px;\n  padding: 0 15px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 30px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 768px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 30px;\n  background-color: #ffffff;\n  padding: 40px 20px;\n  margin: 30px auto 0;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  margin: 20px auto;\n`;\n\nexport const Label = styled.label`\n  position: static;\n  height: 60px;\n  display: block;\n  font-size: 18px;\n  color: #a4a4a4;\n  transform: translateX(15px);\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    height 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus-within,\n  &[data-filled='true'] {\n    height: 95px;\n    color: #000000;\n    transform: translate(15px, -14px);\n  }\n\n  &:focus-within input,\n  &[data-filled='true'] input {\n    transform: translate(-15px, 10px);\n  }\n`;\n\nexport const Input = styled.input`\n  transform: translate(-15px, -34px);\n  margin-bottom: 10px;\n  padding: 14px 15px;\n  width: 250px;\n  border-radius: 10px;\n  border: 2px solid #efefef;\n  background-color: transparent;\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 14px 15px;\n  color: #fff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  border-radius: 10px;\n  background: #146b9c;\n  border: none;\n`;\n\nexport const Text = styled(Link)`\n  display: block;\n  color: #a4a4a4;\n  text-align: center;\n  font-size: 14px;\n`;\n"],"names":["selectFilter","state","filter","ContactForm","contacts","useState","name","setName","number","setNumber","useAddContactMutation","addContact","handleChange","e","target","value","handleSubmit","preventDefault","newContact","find","toLowerCase","alert","reset","handleBlur","currentTarget","parentElement","setAttribute","onSubmit","htmlFor","type","id","pattern","title","required","onChange","onBlur","ContactItem","styled","Text","DeleteButton","Contact","useDeleteContactMutation","deleteContact","handleDelete","onClick","size","color","ContactList","map","Filter","dispatch","useDispatch","useSelector","setFilter","useLazyFetchContactsQuery","fetchContacts","data","isFetching","error","visibleContacts","contact","includes","useEffect","Loader","length","Container","Title1","Title2","Wrapper","Message","Form","Label","Input","Button","Link"],"sourceRoot":""}