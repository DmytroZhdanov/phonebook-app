{"version":3,"file":"static/js/822.4dbf5bb8.chunk.js","mappings":"ySAEaA,EAAYC,EAAAA,EAAAA,IAAH,0KAWTC,EAASD,EAAAA,EAAAA,GAAH,qIAQNE,EAASF,EAAAA,EAAAA,GAAH,qIAQNG,EAAUH,EAAAA,EAAAA,IAAH,qMAWPI,EAAUJ,EAAAA,EAAAA,EAAH,qF,kHC2DpB,UApFc,WACZ,IAAMK,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAgBMC,EAAa,SAAAC,GACjBA,EAAEC,cAAcC,cAAcC,aAC5B,cADF,UAE+B,KAA1BH,EAAEC,cAAcG,MAAe,QAAU,QAE/C,EAEKC,EAAe,SAAAL,GACnB,MAAwBA,EAAEM,OAAlBC,EAAR,EAAQA,KAAMH,EAAd,EAAcA,MAEd,OAAQG,GACN,IAAK,QACHb,EAASU,GACT,MAEF,IAAK,WACHR,EAAYQ,GAMjB,EAED,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAQ,YACR,UAAC,KAAD,CAAMI,SA1CS,SAAAR,GACnBA,EAAES,iBACF,IAAMC,EAAOV,EAAEC,cAEfX,GACEqB,EAAAA,EAAAA,IAAM,CACJC,MAAOF,EAAKG,SAASD,MAAMR,MAC3BT,SAAUe,EAAKG,SAASlB,SAASS,SAIrCM,EAAKI,OACN,EA8BK,WACE,UAAC,KAAD,WAAO,SAEL,SAAC,KAAD,CACEC,KAAK,QACLR,KAAK,QACLS,OAAQjB,EACRkB,SAAUZ,EACVD,MAAOX,EACPyB,UAAQ,QAGZ,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CACEH,KAAMlB,EAAe,OAAS,WAC9BU,KAAK,WACLY,MAAM,4CACNH,OAAQjB,EACRkB,SAAUZ,EACVD,MAAOT,EACPuB,UAAQ,QAGZ,SAAC,IAAD,CAAKE,KAAMvB,EAAcC,gBAAiBA,KAC1C,SAAC,KAAD,CAAQiB,KAAK,SAAb,SAAuB,eAIzB,SAAC,KAAD,CAAMM,GAAG,YAAT,SAAqB,mBAI5B,C,gFC/FYC,E,QAASrC,EAAAA,OAAH,kI,UCENsC,EAAM,SAAC,GAA+B,IAA7BH,EAA4B,EAA5BA,KAAMtB,EAAsB,EAAtBA,gBAK1B,OACE,SAACwB,EAAD,CAAQP,KAAK,SAASS,QALJ,WAClB1B,GAAiBsB,EAClB,EAGC,SACGA,GAAO,SAAC,MAAD,CAAOK,KAAK,QAAU,SAAC,MAAD,CAAYA,KAAK,QAGpD,C,uPCXYzC,EAAYC,EAAAA,EAAAA,IAAH,+OAeTG,EAAUH,EAAAA,EAAAA,IAAH,iMAWPyC,EAAOzC,EAAAA,EAAAA,KAAH,qEAKJ0C,EAAQ1C,EAAAA,EAAAA,MAAH,kiBAwBL2C,EAAQ3C,EAAAA,EAAAA,MAAH,wVAeLqC,EAASrC,EAAAA,EAAAA,OAAH,mOAaN4C,GAAO5C,EAAAA,EAAAA,GAAO6C,EAAAA,GAAP7C,CAAH,wG","sources":["Pages/Contacts/Contacts.styled.js","Pages/Login/Login.jsx","components/Eye/Eye.styled.js","components/Eye/Eye.jsx","components/Form.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 320px;\n  margin: 0 auto;\n  padding: 0 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 30px;\n  }\n`;\n\nexport const Title1 = styled.h1`\n  font-size: 28px;\n  line-height: 1.2;\n  font-weight: 700;\n  margin-bottom: 33px;\n  text-align: center;\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 28px;\n  line-height: 1.2;\n  font-weight: 700;\n  margin-bottom: 33px;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 30px;\n  background-color: #FFFFFF;\n  padding: 40px 20px 20px;\n  margin: 30px auto 0;\n\n  @media screen and (min-width: 768px){\n    width: 400px;\n  }\n`;\n\nexport const Message = styled.p`\n  color: #a4a4a4;\n  text-align: center;\n  font-size: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Title1 } from 'Pages/Contacts/Contacts.styled';\nimport {\n  Container,\n  Wrapper,\n  Form,\n  Input,\n  Label,\n  Button,\n  Text,\n} from 'components/Form.styled';\nimport { Eye } from 'components/Eye/Eye';\nimport { useState } from 'react';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  const handleBlur = e => {\n    e.currentTarget.parentElement.setAttribute(\n      'data-filled',\n      `${e.currentTarget.value === '' ? 'false' : 'true'}`\n    );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setLogin(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title1>Log in</Title1>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={login}\n              required\n            />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              title=\"Password should contain minimum 7 symbols\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={password}\n              required\n            />\n          </Label>\n          <Eye show={showPassword} setShowPassword={setShowPassword} />\n          <Button type=\"submit\" >\n            Log in\n          </Button>\n        </Form>\n        <Text to=\"/register\">or Sign Up</Text>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 86px;\n  right: 5px;\n  border: none;\n  background-color: transparent;\n`;\n","import { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { Button } from './Eye.styled';\nimport PropTypes from 'prop-types';\n\nexport const Eye = ({ show, setShowPassword }) => {\n  const handleClick = () => {\n    setShowPassword(!show);\n  };\n\n  return (\n    <Button type=\"button\" onClick={handleClick}>\n      {show ? <BsEye size=\"20\" /> : <BsEyeSlash size=\"20\" />}\n    </Button>\n  );\n};\n\nEye.propTypes = {\n  show: PropTypes.bool.isRequired,\n  setShowPassword: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 320px;\n  padding: 0 15px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 30px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 768px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 30px;\n  background-color: #ffffff;\n  padding: 40px 20px;\n  margin: 30px auto 0;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  margin: 20px auto;\n`;\n\nexport const Label = styled.label`\n  position: static;\n  height: 60px;\n  display: block;\n  font-size: 18px;\n  color: #a4a4a4;\n  transform: translateX(15px);\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    height 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus-within,\n  &[data-filled='true'] {\n    height: 95px;\n    color: #000000;\n    transform: translate(15px, -14px);\n  }\n\n  &:focus-within input,\n  &[data-filled='true'] input {\n    transform: translate(-15px, 10px);\n  }\n`;\n\nexport const Input = styled.input`\n  transform: translate(-15px, -34px);\n  margin-bottom: 10px;\n  padding: 14px 15px;\n  width: 250px;\n  border-radius: 10px;\n  border: 2px solid #efefef;\n  background-color: transparent;\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 14px 15px;\n  color: #fff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  border-radius: 10px;\n  background: #146b9c;\n  border: none;\n`;\n\nexport const Text = styled(Link)`\n  display: block;\n  color: #a4a4a4;\n  text-align: center;\n  font-size: 14px;\n`;\n"],"names":["Container","styled","Title1","Title2","Wrapper","Message","dispatch","useDispatch","useState","login","setLogin","password","setPassword","showPassword","setShowPassword","handleBlur","e","currentTarget","parentElement","setAttribute","value","handleChange","target","name","onSubmit","preventDefault","form","logIn","email","elements","reset","type","onBlur","onChange","required","title","show","to","Button","Eye","onClick","size","Form","Label","Input","Text","Link"],"sourceRoot":""}